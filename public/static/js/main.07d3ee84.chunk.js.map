{"version":3,"sources":["components/AddToList.js","components/GetFilmInfo.js","components/Watchlist.js","components/ComingSoon.js","components/GetHomePage.js","components/GetTop25.js","App.js","reportWebVitals.js","index.js"],"names":["AddToList","film","image","titlelist","JSON","parse","localStorage","getItem","imagelist","filmAlreadyOnList","i","length","console","log","push","setItem","stringify","GetFilmInfo","_isMounted","state","info","name","ratings","this","search","error","setState","nextProps","nextState","a","axios","get","props","URL","then","res","data","Poster","src","alt","width","height","Title","Year","onClick","Rated","Actors","Director","Writer","Plot","rating1","Ratings","Source","Value","rating2","rating3","React","Component","Watchlist","posters","ClearList","clear","change","url","set","remove","titles","images","newTitles","newImages","k","setter","ttl","img","key2","to","className","path","names","GetHomePage","GetFilm","imgUrls","items","title","id","GetTop25","fullTitle","require","App","useState","setFilm","key","setUrl","type","placeholder","onChange","e","target","value","onKeyPress","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07d3ee84.chunk.js","sourcesContent":["export default function AddToList(film, image) {\n  var titlelist = JSON.parse(localStorage.getItem(\"titles\")) || [];\n  var imagelist = JSON.parse(localStorage.getItem(\"images\")) || [];\n  let filmAlreadyOnList = false;\n\n  // loop to prevent adding same film to the watchlist twice\n  for (let i = 0; i < titlelist.length; i++) {\n    if (titlelist[i] === film) {\n      filmAlreadyOnList = true;\n      console.log(filmAlreadyOnList);\n    }\n  }\n  if (!filmAlreadyOnList) {\n    titlelist.push(film);\n    imagelist.push(image);\n  }\n  // sen the lists back to storage either changed or unchanged\n  localStorage.setItem(\"titles\", JSON.stringify(titlelist));\n  localStorage.setItem(\"images\", JSON.stringify(imagelist));\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport AddToList from \"./AddToList\";\nimport \"./components.css\";\n\nexport default class GetFilmInfo extends React.Component {\n  _isMounted = false;\n  state = {\n    info: [],\n    name: \" \",\n    ratings: [],\n  };\n  // when component is mounted, it will run a search\n  // error handling for no results included\n  componentDidMount() {\n    this._isMounted = true;\n    try {\n      this.search();\n    } catch (error) {\n      this.setState({ info: <p> No results found </p> });\n      console.log(error);\n    }\n  }\n\n  //when new URL is set, a new search will be run\n  // error handling for no results included\n  componentDidUpdate(nextProps, nextState) {\n    try {\n      if (nextState.info !== this.state.info) {\n        this.search();\n      }\n    } catch (error) {\n      this.setState({ info: <p> No results found </p> });\n      console.log(error);\n    }\n  }\n\n  // search function including data parsing and setting up component for render\n  // error handinlg included if no ratings for the film are available (which is very frequent)\n  async search() {\n    axios.get(this.props.URL).then((res) => {\n      const data = res.data;\n      const image = data.Poster;\n\n      if (this._isMounted) {\n        this.setState({\n          info: [\n            <>\n              <img key=\"0\" src={image} alt=\"poster\" width=\"250\" height=\"350\" />\n              <p key=\"1\">\n                {data.Title} ({data.Year})<p></p>\n                <button onClick={() => AddToList(this.state.name, image)}>\n                  Add to Watchlist\n                </button>\n              </p>\n            </>,\n            <p key=\"2\">Rated: {data.Rated}</p>,\n            <p key=\"3\">Starring: {data.Actors}</p>,\n            <p key=\"4\">Directed by: {data.Director}</p>,\n            <p key=\"6\">Writer: {data.Writer}</p>,\n            <p key=\"5\">\n              <em>{data.Plot}</em>\n            </p>,\n          ],\n          name: data.Title,\n        });\n        try {\n          const rating1 = [data.Ratings[0].Source, data.Ratings[0].Value];\n          const rating2 = [data.Ratings[1].Source, data.Ratings[1].Value];\n          const rating3 = [data.Ratings[2].Source, data.Ratings[2].Value];\n          this.setState({\n            ratings: [\n              <>\n                <>\n                  <p key=\"7\">\n                    {rating1[0]}, {rating1[1]}{\" \"}\n                  </p>\n                  <p key=\"8\">\n                    {rating2[0]}, {rating2[1]}\n                  </p>\n                </>\n                <p key=\"9\">\n                  {rating3[0]}, {rating3[1]}\n                </p>\n              </>,\n            ],\n          });\n        } catch (error) {\n          this.setState({\n            ratings: [\n              <p>\n                <em>Ratings not available</em>{\" \"}\n              </p>,\n            ],\n          });\n        }\n      }\n    });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  render() {\n    return (\n      <>\n        <p>{this.state.info} </p>\n        <p>Ratings: {this.state.ratings}</p>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport GetFilmInfo from \"./GetFilmInfo\";\nimport \"./components.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nexport default class Watchlist extends React.Component {\n  state = {\n    posters: [],\n  };\n\n  componentDidMount() {\n    // if persistent storage holds data for watchlist, the watchlist is set\n    // otherwise only text \"empty list\" will be shown\n    try {\n      let titles = JSON.parse(localStorage.getItem(\"titles\"));\n      let images = JSON.parse(localStorage.getItem(\"images\"));\n      console.log(titles);\n      console.log(images);\n      this.setState({ names: titles });\n      this.setter(titles, images);\n    } catch (error) {\n      console.log(error);\n      this.setState({ posters: <p> List empty </p> });\n    }\n  }\n\n  // function to clear the whole watchlist\n  ClearList = () => {\n    localStorage.clear();\n    this.setState({ posters: <p> </p> });\n  };\n\n  // function to change the url in the App-component\n  change = (name) => {\n    let key2 = \"3e5977f9\";\n    let url = `https://www.omdbapi.com/?t=${name}&apikey=${key2}`;\n    this.props.set(url);\n  };\n\n  // function to remove individual films from the list\n  remove = (film, image) => {\n    let titles = JSON.parse(localStorage.getItem(\"titles\"));\n    let images = JSON.parse(localStorage.getItem(\"images\"));\n    let newTitles = [];\n    let newImages = [];\n    for (let k = 0; k < titles.length; k++) {\n      if (titles[k] !== film) {\n        newTitles.push(titles[k]);\n        newImages.push(images[k]);\n      }\n    }\n    localStorage.setItem(\"titles\", JSON.stringify(newTitles));\n    localStorage.setItem(\"images\", JSON.stringify(newImages));\n    console.log(newTitles);\n    this.setter(newTitles, newImages);\n  };\n\n  // setting up the component according to the title and image it receives as parameter\n  // images will once again serve as links to film's page\n  setter = (ttl, img) => {\n    let key2 = \"3e5977f9\";\n    const images = [];\n\n    for (let i = 0; i < img.length; i++) {\n      images[i] = (\n        <>\n          <td>\n            {\" \"}\n            <Link\n              to={\"/GetFilmInfo\"}\n              className=\"nav-link\"\n              onClick={() => this.change(ttl[i])}\n            >\n              <img\n                key={i}\n                src={img[i]}\n                alt=\"poster\"\n                width=\"200\"\n                height=\"280\"\n                onClick={() => {\n                  <GetFilmInfo\n                    URL={`https://www.omdbapi.com/?t=${ttl[i]}&apikey=${key2}`}\n                  />;\n                }}\n              />\n              <Route path=\"/GetFilmInfo\">\n                <GetFilmInfo\n                  URL={`https://www.omdbapi.com/?t=${ttl[i]}&apikey=${key2}`}\n                />\n              </Route>\n            </Link>\n            <p className=\"list\">\n              <small>{ttl[i]}</small>{\" \"}\n              <button onClick={() => this.remove(ttl[i], img[i])}>\n                Delete\n              </button>\n            </p>\n          </td>\n        </>\n      );\n    }\n    this.setState({ posters: [images] });\n  };\n\n  render() {\n    return (\n      <p>\n        <button onClick={() => this.ClearList()}>Clear List</button>\n        <p></p>\n        <tr> {this.state.posters}</tr>\n      </p>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport GetFilmInfo from \"./GetFilmInfo\";\nimport \"./components.css\";\nimport AddToList from \"./AddToList\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport { render } from \"@testing-library/react\";\nexport default class GetHomePage extends React.Component {\n  state = {\n    info: [],\n  };\n\n  componentDidMount(props) {\n    this.search(props);\n  }\n\n  async search(props) {\n    let key = \"k_nb1tky3v\";\n    let url = `https://imdb-api.com/en/API/ComingSoon/${key}`;\n    var key2 = \"3e5977f9\";\n    const GetFilm = (name) => {\n      change(name);\n      console.log(name);\n    };\n    const change = (name) => {\n      url = `https://www.omdbapi.com/?t=${name}&apikey=${key2}`;\n      this.props.set(url);\n      // return <GetFilmInfo URL={url} />;\n    };\n    axios.get(url).then((res) => {\n      const data = res.data;\n      const imgUrls = [];\n      const images = [];\n      const titles = [];\n      console.log(data);\n      for (let i = 0; i < 15; i++) {\n        imgUrls[i] = data.items[i].image;\n        titles[i] = data.items[i].title;\n        images[i] = (\n          <td>\n            <Link to={\"/GetFilmInfo\"}>\n              <img\n                key={data.items[i].id}\n                onClick={() => GetFilm(titles[i])}\n                src={imgUrls[i]}\n                alt=\"poster\"\n                width=\"150\"\n                height=\"200\"\n              />\n              <Route path=\"/GetFilmInfo\">\n                <GetFilmInfo\n                  URL={`https://www.omdbapi.com/?t=${titles[i]}&apikey=${key2}`}\n                />\n              </Route>\n            </Link>\n            <p className=\"list\">\n              <small> {titles[i]}</small>{\" \"}\n            </p>{\" \"}\n            <p></p>\n            <button onClick={() => AddToList(titles[i], imgUrls[i])}>\n              Add to Watchlist\n            </button>\n          </td>\n        );\n      }\n      this.setState({\n        info: [\n          images[0],\n          images[1],\n          images[2],\n          images[3],\n          images[4],\n          <p> </p>,\n          images[5],\n          images[6],\n          images[7],\n          images[8],\n          images[9],\n          <p> </p>,\n          images[10],\n          images[11],\n          images[12],\n          images[13],\n          images[14],\n        ],\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <header>Coming Soon </header>\n        <p> {this.state.info}</p>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport GetFilmInfo from \"./GetFilmInfo\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nexport default class GetHomePage extends React.Component {\n  state = {\n    info: [],\n  };\n\n  componentDidMount(props) {\n    try {\n      this.search(props);\n    } catch (error) {\n      this.setState({ info: <p> </p> });\n      console.log(error);\n    }\n  }\n\n  // function to search film from API\n  async search(props) {\n    let key = \"k_nb1tky3v\";\n    let url = `https://imdb-api.com/en/API/MostPopularMovies/${key}`;\n    var key2 = \"3e5977f9\";\n\n    // function to change the url and send it to App-components\n    const GetFilm = (name) => {\n      url = `https://www.omdbapi.com/?t=${name}&apikey=${key2}`;\n      this.props.set(url);\n    };\n\n    // parsing the data accordingly to arrays\n    try {\n      axios.get(url).then((res) => {\n        const data = res.data;\n        const imgUrls = [];\n        const images = [];\n        const titles = [];\n        // creating the components that will be shown on homepage\n        // each image will also serve as a link to the search page of the film\n        for (let i = 0; i < 15; i++) {\n          imgUrls[i] = data.items[i].image;\n          titles[i] = data.items[i].title;\n          images[i] = (\n            <td>\n              <>\n                <Link to={\"/GetFilmInfo\"} onClick={() => GetFilm(titles[i])}>\n                  <img\n                    key={data.items[i].id}\n                    src={imgUrls[i]}\n                    alt=\"poster\"\n                    width=\"150\"\n                    height=\"200\"\n                  />\n                  <Route path=\"/GetFilmInfo\">\n                    <GetFilmInfo\n                      URL={`https://www.omdbapi.com/?t=${titles[i]}&apikey=${key2}`}\n                    />\n                  </Route>\n                </Link>\n                <p className=\"list\">\n                  <small> {titles[i]}</small>{\" \"}\n                </p>\n              </>\n            </td>\n          );\n        }\n        this.setState({\n          info: [\n            images[0],\n            images[1],\n            images[2],\n            images[3],\n            images[4],\n            <p> </p>,\n            images[5],\n            images[6],\n            images[7],\n            images[8],\n            images[9],\n            <p> </p>,\n            images[10],\n            images[11],\n            images[12],\n            images[13],\n            images[14],\n          ],\n        });\n      });\n    } catch (error) {\n      // in case the number of API-requests is exceeded\n      this.setState({ info: <p> Request limit exceeded! </p> });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <header>Most popular films </header>\n        <p> {this.state.info}</p>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nexport default class GetTop25 extends React.Component {\n  state = {\n    info: [],\n  };\n\n  componentDidMount() {\n    this.search();\n  }\n\n  async search() {\n    let key = \"k_nb1tky3v\";\n    let url = `https://imdb-api.com/en/API/MostPopularMovies/${key}`;\n    axios.get(url).then((res) => {\n      const data = res.data;\n      const imgUrls = [];\n      const images = [];\n      console.log(data);\n      console.log(data.items[0].fullTitle);\n      console.log(data.items[0]);\n      for (let i = 0; i < 25; i++) {\n        imgUrls[i] = data.items[i].image;\n        images[i] = (\n          <td>\n            <>\n              <img\n                key={i}\n                src={imgUrls[i]}\n                alt=\"poster\"\n                width=\"150\"\n                height=\"200\"\n              />\n              <p className=\"list\">\n                <small> {data.items[i].title}</small>{\" \"}\n              </p>\n            </>\n          </td>\n        );\n      }\n\n      this.setState({\n        info: [\n          images[0],\n          images[1],\n          images[2],\n          images[3],\n          images[4],\n          <p> </p>,\n          images[5],\n          images[6],\n          images[7],\n          images[8],\n          images[9],\n          <p> </p>,\n          images[10],\n          images[11],\n          images[12],\n          images[13],\n          images[14],\n          <p> </p>,\n          images[15],\n          images[16],\n          images[17],\n          images[18],\n          images[19],\n          <p> </p>,\n          images[20],\n          images[21],\n          images[22],\n          images[23],\n          images[24],\n        ],\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <header>TODAY'S TOP 25 FILMS </header>\n        <p> {this.state.info}</p>\n      </>\n    );\n  }\n}\n","import \"./App.css\";\nimport GetFilmInfo from \"./components/GetFilmInfo\";\nimport React from \"react\";\nimport Watchlist from \"./components/Watchlist\";\nimport ComingSoon from \"./components/ComingSoon\";\nimport \"./components/components.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport { render } from \"@testing-library/react\";\nimport GetHomePage from \"./components/GetHomePage\";\nimport Login from \"./components/Login\";\nimport GetTop25 from \"./components/GetTop25\";\nconst axios = require(\"axios\");\n\nfunction App() {\n  let [film, setFilm] = React.useState(\"Pulp Fiction\");\n  var key = \"3e5977f9\";\n  let [url, setUrl] = React.useState(\n    `https://www.omdbapi.com/?t=${film}&apikey=${key}`\n  );\n\n  // sending the url to GetFilmInfo -component\n  const GetFilm = () => {\n    return <GetFilmInfo URL={url} />;\n  };\n  //changing the url based on input\n  const change = () => {\n    setUrl(`https://www.omdbapi.com/?t=${film}&apikey=${key}`);\n    GetFilm();\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/*  <Login /> */}\n          <nav className=\"nav-link\">\n            <Link to={\"/GetHomePage\"} className=\"nav-link\">\n              {\"   \"}\n              Home\n            </Link>\n            <> </>\n            <Link to={\"/GetFilmInfo\"} className=\"nav-link\">\n              {\"    \"} Search\n            </Link>\n            <> </>\n            <Link to={\"/ComingSoon\"} className=\"nav-link\">\n              {\"    \"} Coming Soon\n            </Link>\n            <> </>\n            <Link to={\"/GetTop25\"} className=\"nav-link\">\n              {\"    \"}TOP25\n            </Link>\n            <Link to={\"/Watchlist\"} className=\"nav-link\">\n              {\"    \"} Watchlist\n            </Link>\n          </nav>\n          <p>\n            <Link to={\"/GetFilmInfo\"}>\n              <button className=\"b\" onClick={change}>\n                search\n              </button>\n            </Link>\n            <input\n              className=\"customInput\"\n              type=\"text\"\n              placeholder=\"film\"\n              onChange={(e) => {\n                setFilm(e.target.value);\n              }}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") {\n                  change();\n                }\n              }}\n            />\n          </p>\n\n          <Switch>\n            <Route exact path=\"/GetHomePage\">\n              <GetHomePage set={setUrl} />\n            </Route>\n            <Route path=\"/GetFilmInfo\">\n              <GetFilmInfo URL={url} />\n            </Route>\n            <Route path=\"/ComingSoon\">\n              <ComingSoon set={setUrl} />{\" \"}\n            </Route>\n            <Route path=\"/GetTop25\" component={GetTop25} />\n            <Route path=\"/Watchlist\">\n              <Watchlist set={setUrl} />\n            </Route>\n            <Redirect to=\"/GetHomePage\">\n              <GetHomePage set={setUrl} />\n            </Redirect>\n          </Switch>\n        </header>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}