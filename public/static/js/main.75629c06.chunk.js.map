{"version":3,"sources":["components/AddToList.js","components/Search.js","components/Watchlist.js","components/ComingSoon.js","components/HomePage.js","components/Top100.js","components/Hot100.js","components/Top100TV.js","components/Hot100TV.js","App.js","reportWebVitals.js","index.js"],"names":["AddToList","id","title","image","idlist","JSON","parse","localStorage","getItem","titlelist","imagelist","filmAlreadyOnList","i","length","console","log","push","setItem","stringify","Search","_isMounted","state","info","name","ratings","onList","added","setState","search","a","axios","get","props","URL","then","res","data","Poster","Response","className","Title","Year","onClick","align","src","alt","width","height","Rated","Runtime","Actors","Director","Writer","BoxOffice","Plot","Awards","imdbID","rating1","Ratings","Source","Value","rating2","rating3","error","this","nextProps","nextState","React","Component","Watchlist","posters","ClearList","clear","change","url","set","remove","film","ids","titles","images","newIds","newTitles","newImages","setter","img","slice","to","path","rows","names","ComingSoon","toggle","GetFilm","imgUrls","items","HomePage","filminfo","tvinfo","searchfilm","searchtv","filmrows","tvrows","Top100","Hot100","App","useState","setFilm","setUrl","size","type","placeholder","onChange","e","target","value","onKeyPress","key","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75629c06.chunk.js","sourcesContent":["export default function AddToList(id, title, image) {\n  var idlist = JSON.parse(localStorage.getItem(\"ids\")) || [];\n  var titlelist = JSON.parse(localStorage.getItem(\"titles\")) || [];\n  var imagelist = JSON.parse(localStorage.getItem(\"images\")) || [];\n\n  let filmAlreadyOnList = false;\n\n  // loop to prevent adding same film to the watchlist twice\n  for (let i = 0; i < idlist.length; i++) {\n    if (idlist[i] === id) {\n      filmAlreadyOnList = true;\n      console.log(filmAlreadyOnList);\n    }\n  }\n  if (!filmAlreadyOnList) {\n    idlist.push(id);\n    titlelist.push(title);\n    imagelist.push(image);\n  }\n  // sen the lists back to storage either changed or unchanged\n  localStorage.setItem(\"ids\", JSON.stringify(idlist));\n  localStorage.setItem(\"titles\", JSON.stringify(titlelist));\n  localStorage.setItem(\"images\", JSON.stringify(imagelist));\n  console.log(\"Added to list\");\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport AddToList from \"./AddToList\";\nimport \"./components.css\";\n\nexport default class Search extends React.Component {\n  _isMounted = false;\n  // state components to hold and deliver information to other React components\n  state = {\n    info: [],\n    name: \" \",\n    ratings: [],\n    onList: [],\n    id: \" \",\n  };\n  // when component is mounted, it will run a search\n  // error handling for no results included\n  componentDidMount(props) {\n    // clearing the checkmark with new searches\n    this.setState({ onList: [] });\n    this._isMounted = true;\n    try {\n      this.search();\n    } catch (error) {\n      this.setState({\n        info: (\n          <p>\n            <em>No results found </em>\n          </p>\n        ),\n      });\n      console.log(error);\n    }\n  }\n\n  //when new URL is set, a new search will be run\n  // error handling for no results included\n  componentDidUpdate(nextProps, nextState) {\n    try {\n      // checking if the search url is changed to prevent infinite loop\n      if (nextProps.URL !== this.props.URL) {\n        this.search();\n        this.setState({\n          onList: [<></>],\n        });\n      }\n    } catch (error) {\n      this.setState({ info: <p> No results found </p> });\n      console.log(error);\n    }\n  }\n  // letting it show when \"add to watchlist\" is clicked and the film is added to list\n  added = () => {\n    // alert(\"Added to watchlist\");\n    this.setState({\n      onList: [<>✅</>],\n    });\n    this.search();\n  };\n  // search function including data parsing and setting up component for render\n  // error handling included if no ratings for the film are available (which is very frequent)\n  search = async () => {\n    await axios.get(this.props.URL).then((res) => {\n      const data = res.data;\n      const image = data.Poster;\n      if (data.Response === \"False\") {\n        this.setState({ info: [<p> Not found </p>] });\n        // alert(\"No results, search a different title\");\n      } else {\n        if (this._isMounted) {\n          this.setState({\n            info: [\n              <div>\n                <h2>\n                  <p className=\"header\">\n                    {data.Title} ({data.Year})\n                    <p>\n                      <button\n                        className=\"b\"\n                        onClick={() => (\n                          AddToList(this.state.id, this.state.name, image),\n                          this.added()\n                        )}\n                      >\n                        Add to Watchlist\n                      </button>\n                      <small>{this.state.onList}</small>\n                    </p>\n                  </p>\n                  <img\n                    align=\"left\"\n                    key=\"0\"\n                    src={image}\n                    alt=\"poster\"\n                    width=\"300\"\n                    height=\"420\"\n                  />\n                </h2>\n                <section className=\"infoarticle\">\n                  <p>Rated: {data.Rated}</p>\n                  <p>Runtime: {data.Runtime}</p>\n                  <p>Starring: {data.Actors}</p>\n                  <p>Directed by: {data.Director}</p>\n                  <p>Writer: {data.Writer}</p>\n                  <p>Box Office: {data.BoxOffice}</p>\n                  <p>\n                    <em>{data.Plot}</em>\n                  </p>\n                  <p>Awards: {data.Awards}</p>\n                </section>\n              </div>,\n            ],\n            name: data.Title,\n            id: data.imdbID,\n          });\n\n          try {\n            const rating1 = [data.Ratings[0].Source, data.Ratings[0].Value];\n            const rating2 = [data.Ratings[1].Source, data.Ratings[1].Value];\n            const rating3 = [data.Ratings[2].Source, data.Ratings[2].Value];\n            this.setState({\n              ratings: [\n                <ul>\n                  <li>\n                    {rating1[0]}: {rating1[1]}\n                  </li>\n\n                  <li>\n                    {rating2[0]}: {rating2[1]}\n                  </li>\n\n                  <li>\n                    {rating3[0]}: {rating3[1]}\n                  </li>\n                </ul>,\n              ],\n            });\n          } catch (error) {\n            this.setState({\n              ratings: [\n                <p>\n                  <em>Ratings not available</em>\n                </p>,\n              ],\n            });\n          }\n        }\n      }\n    });\n  };\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  render() {\n    return (\n      <div>\n        <table>{this.state.info} </table>\n        <p className=\"ratings\"> RATINGS {this.state.ratings}</p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Search from \"./Search\";\nimport \"./components.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nexport default class Watchlist extends React.Component {\n  state = {\n    posters: [],\n  };\n\n  componentDidMount() {\n    // if persistent storage holds data for watchlist, the watchlist is set\n    // otherwise only text \"empty list\" will be shown\n    try {\n      let ids = JSON.parse(localStorage.getItem(\"ids\"));\n      let titles = JSON.parse(localStorage.getItem(\"titles\"));\n      let images = JSON.parse(localStorage.getItem(\"images\"));\n      this.setState({ names: ids });\n      this.setter(ids, titles, images);\n    } catch (error) {\n      console.log(error);\n      this.setState({ posters: <p> List empty </p> });\n    }\n  }\n\n  // function to clear the whole watchlist\n  ClearList = () => {\n    localStorage.clear();\n    this.setState({ posters: <p> </p> });\n  };\n\n  // function to change the url in the App-component\n  change = (id) => {\n    let url = `/find?i=${id}&plot=full`; //`https://www.omdbapi.com/?i=${id}&apikey=${key2}`;\n    this.props.set(url);\n  };\n\n  // function to remove individual films from the list\n  remove = (film, image) => {\n    let ids = JSON.parse(localStorage.getItem(\"ids\"));\n    let titles = JSON.parse(localStorage.getItem(\"titles\"));\n    let images = JSON.parse(localStorage.getItem(\"images\"));\n    let newIds = [];\n    let newTitles = [];\n    let newImages = [];\n    for (let i = 0; i < ids.length; i++) {\n      if (ids[i] !== film) {\n        newIds.push(ids[i]);\n        newTitles.push(titles[i]);\n        newImages.push(images[i]);\n      }\n    }\n    localStorage.setItem(\"ids\", JSON.stringify(newIds));\n    localStorage.setItem(\"titles\", JSON.stringify(newTitles));\n    localStorage.setItem(\"images\", JSON.stringify(newImages));\n    // setting the updated list after item is deleted\n    this.setter(newIds, newTitles, newImages);\n  };\n\n  // setting up the component according to the title and image it receives as parameter\n  // images will once again serve as links to film's page\n  setter = (id, title, img) => {\n    const images = [];\n\n    for (let i = 0; i < img.length; i++) {\n      // Handling for titles that are so long that they mess up the view\n      if (title[i].length > 18) {\n        title[i] = title[i].slice(0, 16);\n        title[i] = `${title[i]}...`;\n      }\n      images[i] = (\n        <td>\n          <Link to={\"/Search\"} onClick={() => this.change(id[i])}>\n            <img\n              key={i}\n              src={img[i]}\n              alt=\"poster\"\n              width=\"200\"\n              height=\"280\"\n              onClick={() => {\n                <Search\n                  URL={`/find?i=${id[i]}&plot=full`} //`https://www.omdbapi.com/?i=${id[i]}&apikey=${key2}`}\n                />;\n              }}\n            />\n            <Route path=\"/Search\">\n              <Search\n                URL={`/find?i=${id[i]}&plot=full`} //`https://www.omdbapi.com/?i=${id[i]}&apikey=${key2}`}\n              />\n            </Route>\n          </Link>\n          <p text-align=\"center\">\n            {title[i]}\n            <p>\n              <button className=\"b\" onClick={() => this.remove(id[i], img[i])}>\n                Delete\n              </button>\n            </p>\n          </p>\n        </td>\n      );\n    }\n    // setting posters in rows of 5\n    if (img.length < 6) {\n      this.setState({ posters: [<table className=\"list\">{images}</table>] });\n    } else {\n      let rows = [];\n      for (let i = 0; i < img.length; i++) {\n        if (i % 5 === 0) {\n          rows.push(<tr>{}</tr>);\n        }\n        rows.push(images[i]);\n      }\n      this.setState({ posters: [<table className=\"list\">{rows}</table>] });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <p align=\"center\">\n          <button align=\"center\" className=\"b\" onClick={() => this.ClearList()}>\n            Clear List\n          </button>\n        </p>\n        {this.state.posters}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport Search from \"./Search\";\nimport \"./components.css\";\nimport AddToList from \"./AddToList\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport { render } from \"@testing-library/react\";\nexport default class ComingSoon extends React.Component {\n  state = {\n    info: [],\n    onList: [],\n    toggle: true,\n  };\n\n  componentDidMount(props) {\n    this.search(props);\n  }\n\n  async search(props) {\n    let url = `/upcoming`; //`https://imdb-api.com/en/API/ComingSoon/${key}`;\n\n    const GetFilm = (id) => {\n      change(id);\n      console.log(id);\n    };\n    // if user add's item to watchlist, the button will stop showing and will show ✅ instead\n    const added = () => {\n      this.setState({ toggle: false });\n    };\n\n    const change = (id) => {\n      url = `/find?i=${id}`; // `https://www.omdbapi.com/?i=${id}&apikey=${key2}`;\n      this.props.set(url);\n      // return <Search URL={url} />;\n    };\n    axios.get(url).then((res) => {\n      const data = res.data;\n      const imgUrls = [];\n      const images = [];\n      const titles = [];\n      const ids = [];\n\n      for (let i = 0; i < data.items.length; i++) {\n        imgUrls[i] = data.items[i].image;\n        titles[i] = data.items[i].title;\n        // Handling for titles that are so long that they mess up the view\n        if (titles[i].length > 17) {\n          titles[i] = titles[i].slice(0, 15);\n          titles[i] = `${titles[i]}...`;\n        }\n        ids[i] = data.items[i].id;\n        images[i] = (\n          <td>\n            <Link to={\"/Search\"}>\n              <img\n                key={data.items[i].id}\n                onClick={() => GetFilm(ids[i])}\n                src={imgUrls[i]}\n                alt=\"poster\"\n                width=\"200\"\n                height=\"280\"\n              />\n              <Route path=\"/Search\">\n                <Search\n                  URL={`/find?i=${ids[i]}`} //`https://www.omdbapi.com/?i=${ids[i]}&apikey=${key2}`}\n                />\n              </Route>\n            </Link>\n            <p text-align=\"center\">\n              {titles[i]}{\" \"}\n              <button\n                className=\"b\"\n                onClick={() => AddToList(ids[i], titles[i], imgUrls[i])}\n              >\n                +\n              </button>\n            </p>\n          </td>\n        );\n      }\n      let rows = [];\n      for (let i = 0; i < images.length; i++) {\n        if (i % 5 === 0) {\n          rows.push(<tr>{}</tr>);\n        }\n        rows.push(images[i]);\n      }\n      this.setState({\n        info: [<table className=\"list\">{rows}</table>],\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <header className=\"header\" text-align=\"center\">\n          Coming Soon\n        </header>\n        <div>{this.state.info}</div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport Search from \"./Search\";\nimport \"./components.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nexport default class HomePage extends React.Component {\n  state = {\n    filminfo: [],\n    tvinfo: [],\n  };\n\n  componentDidMount(props) {\n    try {\n      this.searchfilm(props);\n      this.searchtv(props);\n    } catch (error) {\n      this.setState({ info: <p> </p> });\n      console.log(error);\n    }\n  }\n\n  // function to search film from API\n  async searchfilm(props) {\n    let url = `/popular`;\n\n    // function to change the url and send it to App-components\n    const GetFilm = (id) => {\n      url = `/find?i=${id}`;\n      this.props.set(url);\n    };\n\n    // parsing the data accordingly to arrays\n    try {\n      axios.get(url).then((res) => {\n        const data = res.data;\n        // arrays to hold the information needed\n        const imgUrls = [];\n        const images = [];\n        const ids = [];\n        const titles = [];\n        // creating the components that will be shown on homepage\n        // each image will also serve as a link to the search page of the film\n        for (let i = 0; i < 15; i++) {\n          imgUrls[i] = data.items[i].image;\n          titles[i] = data.items[i].title;\n\n          // Handling for titles that are so long that they mess up the view\n          if (titles[i].length > 17) {\n            titles[i] = titles[i].slice(0, 14);\n            titles[i] = `${titles[i]}...`;\n          }\n          // console.log(data);\n          ids[i] = data.items[i].id;\n          images[i] = (\n            <td>\n              <Link to={\"/Search\"} onClick={() => GetFilm(ids[i])}>\n                <img\n                  key={data.items[i].id}\n                  src={imgUrls[i]}\n                  alt=\"poster\"\n                  width=\"200\"\n                  height=\"280\"\n                />\n                <Route path=\"/Search\">\n                  <Search URL={`/find?i=${ids[i]}`} />\n                </Route>\n              </Link>\n              <p text-align=\"center\">{titles[i]}</p>\n            </td>\n          );\n        }\n        // Setting the images in a table with rows of 5\n        let filmrows = [];\n        for (let i = 0; i < images.length; i++) {\n          if (i % 5 === 0) {\n            filmrows.push(<tr>{}</tr>);\n          }\n          filmrows.push(images[i]);\n        }\n        this.setState({\n          filminfo: [<table className=\"toplist\">{filmrows}</table>],\n        });\n      });\n    } catch (error) {\n      // in case the number of API-requests is exceeded\n      this.setState({ filminfo: <p> Request limit exceeded! </p> });\n    }\n  }\n\n  // Function to get 15 most popular tv shows for the homepage\n  async searchtv() {\n    let url = `/popularTV`;\n\n    // setting and sending url to app.js, which delivers it to Search.js as props\n    const GetFilm = (id) => {\n      url = `/find?i=${id}&plot=full`; // `https://www.omdbapi.com/?i=${id}&apikey=${key2}`;\n      this.props.set(url);\n    };\n     try {\n    axios.get(url).then((res) => {\n      const data = res.data;\n      // arrays to hold the information needed\n      const imgUrls = [];\n      const images = [];\n      const titles = [];\n      const ids = [];\n      for (let i = 0; i < 15; i++) {\n        imgUrls[i] = data.items[i].image;\n        titles[i] = data.items[i].title;\n        // Handling for titles that are so long that they mess up the view\n        if (titles[i].length > 17) {\n          titles[i] = titles[i].slice(0, 14);\n          titles[i] = `${titles[i]}...`;\n        }\n        ids[i] = data.items[i].id;\n        images[i] = (\n          <td>\n            <>\n              <Link to={\"/Search\"}>\n                <img\n                  key={i}\n                  onClick={() => GetFilm(ids[i])}\n                  src={imgUrls[i]}\n                  alt=\"poster\"\n                  width=\"200\"\n                  height=\"280\"\n                />\n                <Route path=\"/Search\">\n                  <Search\n                    URL={`/find?i=${ids[i]}&plot=full`} \n                  />\n                </Route>\n              </Link>\n              <p text-align=\"center\">{titles[i]} </p>\n            </>\n          </td>\n        );\n      }\n      // Setting the images in a table with rows of 5\n      let tvrows = [];\n      for (let i = 0; i < images.length; i++) {\n        if (i % 5 === 0) {\n          tvrows.push(<tr>{}</tr>);\n        }\n        tvrows.push(images[i]);\n      }\n      this.setState({\n        tvinfo: [<table className=\"toplist\">{tvrows}</table>],\n      });\n    });\n  }\n  catch(error){\n    // in case the number of API-requests is exceeded\n    this.setState({ tvinfo: <p> Request limit exceeded! </p> });\n   }\n  }\n  // Displaying the content\n  render() {\n    return (\n      <>\n        <header className=\"header\"> POPULAR FILMS </header>\n        <table className=\"list\"> {this.state.filminfo}</table>\n        <header className=\"header\"> POPULAR ON TV </header>\n        <table className=\"list\"> {this.state.tvinfo}</table>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport Search from \"./Search\";\nimport AddToList from \"./AddToList\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nexport default class Top100 extends React.Component {\n  state = {\n    info: [],\n  };\n  // Performing the search function on mount to get, handle and display data\n  componentDidMount() {\n    this.search();\n  }\n\n  async search() {\n    let url = `/top`;\n    // delivers the id to change function\n    const GetFilm = (id) => {\n      change(id);\n      console.log(id);\n    };\n    // setting and sending url to app.js, which delivers it to Search.js as props\n    const change = (id) => {\n      url = `/find?i=${id}&plot=full`; // `https://www.omdbapi.com/?i=${id}&apikey=${key2}`;\n      this.props.set(url);\n    };\n    axios.get(url).then((res) => {\n      const data = res.data;\n      // arrays to hold the information needed\n      const imgUrls = [];\n      const images = [];\n      const titles = [];\n      const ids = [];\n      for (let i = 0; i < 100; i++) {\n        imgUrls[i] = data.items[i].image;\n        titles[i] = data.items[i].title;\n        // Handling for titles that are so long that they mess up the view\n        if (titles[i].length > 17) {\n          titles[i] = titles[i].slice(0, 15);\n          titles[i] = `${titles[i]}...`;\n        }\n        ids[i] = data.items[i].id;\n        images[i] = (\n          <td>\n            <>\n              <Link to={\"/Search\"}>\n                <img\n                  key={i}\n                  onClick={() => GetFilm(ids[i])}\n                  src={imgUrls[i]}\n                  alt=\"poster\"\n                  width=\"200\"\n                  height=\"280\"\n                />\n                <Route path=\"/Search\">\n                  <Search\n                    URL={`/find?i=${ids[i]}&plot=full`} //`https://www.omdbapi.com/?i=${ids[i]}&apikey=${key2}`}\n                  />\n                </Route>\n              </Link>\n              <p text-align=\"center\">\n                {[i + 1]}. {titles[i]}{\" \"}\n                <button\n                  className=\"b\"\n                  onClick={() => AddToList(ids[i], titles[i], imgUrls[i])}\n                >\n                  +\n                </button>\n              </p>\n            </>\n          </td>\n        );\n      }\n      // setting the posters in rows of 5\n      let rows = [];\n      for (let i = 0; i < images.length; i++) {\n        if (i % 5 === 0) {\n          rows.push(<tr>{}</tr>);\n        }\n        rows.push(images[i]);\n      }\n      this.setState({\n        info: [<table className=\"toplist\">{rows}</table>],\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <header className=\"header\" text-align=\"center\">\n          IMDB'S 100 TOP RATED FILMS\n        </header>\n        <div> {this.state.info}</div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport Search from \"./Search\";\nimport AddToList from \"./AddToList\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nexport default class Hot100 extends React.Component {\n  state = {\n    info: [],\n  };\n  // Performing the search function on mount to get, handle and display data\n  componentDidMount() {\n    this.search();\n  }\n\n  async search() {\n    let url = `/popular`;\n    const GetFilm = (id) => {\n      change(id);\n      console.log(id);\n    };\n\n    // setting and sending url to app.js, which delivers it to Search.js as props\n    const change = (id) => {\n      url = `/find?i=${id}&plot=full`; // `https://www.omdbapi.com/?i=${id}&apikey=${key2}`;\n      this.props.set(url);\n    };\n    axios.get(url).then((res) => {\n      const data = res.data;\n      // arrays to hold the information needed\n      const imgUrls = [];\n      const images = [];\n      const titles = [];\n      const ids = [];\n      for (let i = 0; i < 100; i++) {\n        imgUrls[i] = data.items[i].image;\n        titles[i] = data.items[i].title;\n        // Handling for titles that are so long that they mess up the view\n        if (titles[i].length > 17) {\n          titles[i] = titles[i].slice(0, 15);\n          titles[i] = `${titles[i]}...`;\n        }\n        ids[i] = data.items[i].id;\n        images[i] = (\n          <td>\n            <>\n              <Link to={\"/Search\"}>\n                <img\n                  key={i}\n                  onClick={() => GetFilm(ids[i])}\n                  src={imgUrls[i]}\n                  alt=\"poster\"\n                  width=\"200\"\n                  height=\"280\"\n                />\n                <Route path=\"/Search\">\n                  <Search\n                    URL={`/find?i=${ids[i]}&plot=full`} //`https://www.omdbapi.com/?i=${ids[i]}&apikey=${key2}`}\n                  />\n                </Route>\n              </Link>\n              <p text-align=\"center\">\n                {[i + 1]}. {titles[i]}{\" \"}\n                <button\n                  className=\"b\"\n                  onClick={() => AddToList(ids[i], titles[i], imgUrls[i])}\n                >\n                  +\n                </button>\n              </p>\n            </>\n          </td>\n        );\n      }\n      let rows = [];\n      for (let i = 0; i < images.length; i++) {\n        if (i % 5 === 0) {\n          rows.push(<tr>{}</tr>);\n        }\n        rows.push(images[i]);\n      }\n      this.setState({\n        info: [<table className=\"toplist\">{rows}</table>],\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <header className=\"header\" text-align=\"center\">\n          TODAY'S 100 MOST POPULAR FILMS\n        </header>\n        <div className=\"posters\"> {this.state.info}</div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport Search from \"./Search\";\nimport AddToList from \"./AddToList\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nexport default class Top100 extends React.Component {\n  state = {\n    info: [],\n  };\n  // Performing the search function on mount to get, handle and display data\n  componentDidMount() {\n    this.search();\n  }\n\n  async search() {\n    let url = `/topTV`;\n    // delivers the id to change function\n    const GetFilm = (id) => {\n      change(id);\n      console.log(id);\n    };\n    // setting and sending url to app.js, which delivers it to Search.js as props\n    const change = (id) => {\n      url = `/find?i=${id}&plot=full`; // `https://www.omdbapi.com/?i=${id}&apikey=${key2}`;\n      this.props.set(url);\n    };\n    axios.get(url).then((res) => {\n      const data = res.data;\n      // arrays to hold the information needed\n      const imgUrls = [];\n      const images = [];\n      const titles = [];\n      const ids = [];\n      for (let i = 0; i < 100; i++) {\n        imgUrls[i] = data.items[i].image;\n        titles[i] = data.items[i].title;\n        // Handling for titles that are so long that they mess up the view\n        if (titles[i].length > 17) {\n          titles[i] = titles[i].slice(0, 15);\n          titles[i] = `${titles[i]}...`;\n        }\n        ids[i] = data.items[i].id;\n        images[i] = (\n          <td>\n            <>\n              <Link to={\"/Search\"}>\n                <img\n                  key={i}\n                  onClick={() => GetFilm(ids[i])}\n                  src={imgUrls[i]}\n                  alt=\"poster\"\n                  width=\"200\"\n                  height=\"280\"\n                />\n                <Route path=\"/Search\">\n                  <Search\n                    URL={`/find?i=${ids[i]}&plot=full`} //`https://www.omdbapi.com/?i=${ids[i]}&apikey=${key2}`}\n                  />\n                </Route>\n              </Link>\n              <p text-align=\"center\">\n                {[i + 1]}. {titles[i]}{\" \"}\n                <button\n                  className=\"b\"\n                  onClick={() => AddToList(ids[i], titles[i], imgUrls[i])}\n                >\n                  +\n                </button>\n              </p>\n            </>\n          </td>\n        );\n      }\n      // setting the posters in rows of 5\n      let rows = [];\n      for (let i = 0; i < images.length; i++) {\n        if (i % 5 === 0) {\n          rows.push(<tr>{}</tr>);\n        }\n        rows.push(images[i]);\n      }\n      this.setState({\n        info: [<table className=\"toplist\">{rows}</table>],\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <header className=\"header\" text-align=\"center\">\n          IMDB'S 100 TOP RATED TV SHOWS\n        </header>\n        <div> {this.state.info}</div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport Search from \"./Search\";\nimport AddToList from \"./AddToList\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nexport default class Hot100 extends React.Component {\n  state = {\n    info: [],\n  };\n  // Performing the search function on mount to get, handle and display data\n  componentDidMount() {\n    this.search();\n  }\n\n  async search() {\n    let url = `/popularTV`;\n    const GetFilm = (id) => {\n      change(id);\n      console.log(id);\n    };\n\n    // setting and sending url to app.js, which delivers it to Search.js as props\n    const change = (id) => {\n      url = `/find?i=${id}&plot=full`; // `https://www.omdbapi.com/?i=${id}&apikey=${key2}`;\n      this.props.set(url);\n    };\n    axios.get(url).then((res) => {\n      const data = res.data;\n      // arrays to hold the information needed\n      const imgUrls = [];\n      const images = [];\n      const titles = [];\n      const ids = [];\n      for (let i = 0; i < 100; i++) {\n        imgUrls[i] = data.items[i].image;\n        titles[i] = data.items[i].title;\n        // Handling for titles that are so long that they mess up the view\n        if (titles[i].length > 17) {\n          titles[i] = titles[i].slice(0, 15);\n          titles[i] = `${titles[i]}...`;\n        }\n        ids[i] = data.items[i].id;\n        images[i] = (\n          <td>\n            <>\n              <Link to={\"/Search\"}>\n                <img\n                  key={i}\n                  onClick={() => GetFilm(ids[i])}\n                  src={imgUrls[i]}\n                  alt=\"poster\"\n                  width=\"200\"\n                  height=\"280\"\n                />\n                <Route path=\"/Search\">\n                  <Search\n                    URL={`/find?i=${ids[i]}&plot=full`} //`https://www.omdbapi.com/?i=${ids[i]}&apikey=${key2}`}\n                  />\n                </Route>\n              </Link>\n              <p text-align=\"center\">\n                {[i + 1]}. {titles[i]}{\" \"}\n                <button\n                  className=\"b\"\n                  onClick={() => AddToList(ids[i], titles[i], imgUrls[i])}\n                >\n                  +\n                </button>\n              </p>\n            </>\n          </td>\n        );\n      }\n      let rows = [];\n      for (let i = 0; i < images.length; i++) {\n        if (i % 5 === 0) {\n          rows.push(<tr>{}</tr>);\n        }\n        rows.push(images[i]);\n      }\n      this.setState({\n        info: [<table className=\"toplist\">{rows}</table>],\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <header className=\"header\" text-align=\"center\">\n          TODAY'S 100 MOST POPULAR FILMS\n        </header>\n        <div className=\"posters\"> {this.state.info}</div>\n      </>\n    );\n  }\n}\n","import \"./App.css\";\nimport Search from \"./components/Search\";\nimport React from \"react\";\nimport Watchlist from \"./components/Watchlist\";\nimport ComingSoon from \"./components/ComingSoon\";\nimport \"./components/components.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport HomePage from \"./components/HomePage\";\nimport Top100 from \"./components/Top100\";\nimport Hot100 from \"./components/Hot100\";\nimport Top100TV from \"./components/Top100TV\";\nimport Hot100TV from \"./components/Hot100TV\";\n\nfunction App() {\n  // Setting the film and urls with useState\n  // default value set to Blade Runner so Search will never show empty page (or info for the film \"Untitled\")\n  let [film, setFilm] = React.useState(\"Blade Runner\");\n  let [url, setUrl] = React.useState(\n    `/find?t=${film}&plot=full` //`https://www.omdbapi.com/?t=${film}&apikey=${key}`\n  );\n\n  // sending the url to Search -component\n  const GetFilm = () => {\n    return <Search URL={url} set={setUrl} />;\n  };\n  //changing the url based on input\n  const change = () => {\n    setUrl(`/find?t=${film}&plot=full`); //`https://www.omdbapi.com/?t=${film}&apikey=${key}`);\n    GetFilm();\n  };\n\n  // return links to pages, input field, search button\n  // and redirect automatically to homepage\n  return (\n    <Router>\n      <body>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <ul>\n              <li>\n                <Link to={\"/HomePage\"} className=\"nav-link\">\n                  {\"   \"}\n                  Home\n                </Link>\n              </li>\n              <li>\n                <Link to={\"/Search\"} className=\"nav-link\">\n                  {\"    \"} Search\n                </Link>\n              </li>\n              <li>\n                <Link to={\"/Top100\"} className=\"nav-link\">\n                  {\"    \"} Top100 (Film)\n                </Link>\n              </li>\n\n              <li>\n                <Link to={\"/Hot100\"} className=\"nav-link\">\n                  {\"    \"} Hot100 (Film)\n                </Link>\n              </li>\n              <li>\n                <Link to={\"/ComingSoon\"} className=\"nav-link\">\n                  {\"    \"} Coming Soon\n                </Link>\n              </li>\n\n              <li>\n                <Link to={\"/Top100TV\"} className=\"nav-link\">\n                  {\"    \"} Top100 (TV)\n                </Link>\n              </li>\n\n              <li>\n                <Link to={\"/Hot100TV\"} className=\"nav-link\">\n                  {\"    \"} Hot100 (TV)\n                </Link>\n              </li>\n\n              <li>\n            \n                <Link to={\"/Watchlist\"} className=\"nav-link\">\n                  {\"     \"} Watchlist\n                </Link>\n              </li>\n            </ul>\n            <div>\n              <Link to={\"/Search\"}>\n                <button className=\"b\" onClick={change}>\n                  Search\n                </button>\n              </Link>\n              <input\n                size=\"40\"\n                className=\"customInput\"\n                type=\"text\"\n                placeholder=\"film\"\n                onChange={(e) => {\n                  setFilm(e.target.value);\n                }}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\") {\n                    change();\n                  }\n                }}\n              />\n            </div>\n            <Switch>\n              <Route exact path=\"/HomePage\">\n                <HomePage set={setUrl} />\n              </Route>\n              <Route path=\"/Search\">\n                <Search URL={url} set={setUrl} />\n              </Route>\n              <Route path=\"/Top100\">\n                <Top100 set={setUrl} />\n              </Route>\n              <Route path=\"/Hot100\">\n                <Hot100 set={setUrl} />\n              </Route>\n              <Route path=\"/ComingSoon\">\n                <ComingSoon set={setUrl} />\n              </Route>\n              <Route path=\"/Top100TV\">\n                <Top100TV set={setUrl} />\n              </Route>\n              <Route path=\"/Hot100TV\">\n                <Hot100TV set={setUrl} />\n              </Route>\n              <Route path=\"/Watchlist\">\n                <Watchlist set={setUrl} />\n              </Route>\n              <Redirect to=\"/HomePage\">\n                <HomePage set={setUrl} />\n              </Redirect>\n            </Switch>\n          </header>\n        </div>\n      </body>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}