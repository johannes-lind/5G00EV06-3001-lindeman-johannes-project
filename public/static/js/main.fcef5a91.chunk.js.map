{"version":3,"sources":["components/AddToList.js","components/GetFilmInfo.js","components/Watchlist.js","components/ComingSoon.js","components/GetHomePage.js","components/GetTop25.js","App.js","reportWebVitals.js","index.js"],"names":["AddToList","film","image","titlelist","JSON","parse","localStorage","getItem","imagelist","input1","input2","push","console","log","setItem","stringify","GetFilmInfo","_isMounted","state","info","name","this","search","error","setState","nextProps","nextState","a","axios","get","props","URL","then","res","data","Poster","src","alt","width","height","Title","Year","onClick","Rated","Actors","Director","Writer","Plot","Ratings","Source","Value","React","Component","Watchlist","posters","ClearList","clear","change","url","set","setter","ttl","img","key2","images","i","to","className","path","length","titles","names","GetHomePage","GetFilm","imgUrls","items","title","id","GetTop25","fullTitle","require","App","useState","setFilm","key","setUrl","type","placeholder","onChange","e","target","value","onKeyPress","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcef5a91.chunk.js","sourcesContent":["export default function AddToList(film, image) {\n  var titlelist = JSON.parse(localStorage.getItem(\"titles\")) || [];\n  var imagelist = JSON.parse(localStorage.getItem(\"images\")) || [];\n  var input1 = film;\n  var input2 = image;\n\n  titlelist.push(input1);\n  imagelist.push(input2);\n  console.log(titlelist);\n  console.log(imagelist);\n\n  localStorage.setItem(\"titles\", JSON.stringify(titlelist));\n  localStorage.setItem(\"images\", JSON.stringify(imagelist));\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport AddToList from \"./AddToList\";\n\nexport default class GetFilmInfo extends React.Component {\n  _isMounted = false;\n  state = {\n    info: [],\n    name: \" \",\n  };\n\n  componentDidMount() {\n    this._isMounted = true;\n    try {\n      this.search();\n    } catch (error) {\n      this.setState({ info: <p> No results found </p> });\n      console.log(error);\n    }\n  }\n\n  componentDidUpdate(nextProps, nextState) {\n    try {\n      if (nextState.info !== this.state.info) {\n        this.search();\n      }\n    } catch (error) {\n      this.setState({ info: <p> No results found </p> });\n      console.log(error);\n    }\n  }\n\n  async search() {\n    axios.get(this.props.URL).then((res) => {\n      const data = res.data;\n      const image = data.Poster;\n\n      // console.log(image);\n      //console.log(data);\n      if (this._isMounted) {\n        this.setState({\n          info: [\n            <>\n              <img key=\"0\" src={image} alt=\"poster\" width=\"250\" height=\"350\" />\n              <p key=\"1\">\n                {data.Title} ({data.Year})<p></p>\n                <button onClick={() => AddToList(this.state.name, image)}>\n                  Add to Watchlist\n                </button>\n              </p>\n            </>,\n            <p key=\"2\">Rated: {data.Rated}</p>,\n            <p key=\"3\">Starring: {data.Actors}</p>,\n            <p key=\"4\">Directed by: {data.Director}</p>,\n            <p key=\"6\">Writer: {data.Writer}</p>,\n            <p key=\"5\">\n              <em>{data.Plot}</em>\n            </p>,\n            <>\n              <p key=\"7\">\n                {data.Ratings[0].Source}, {data.Ratings[0].Value}{\" \"}\n              </p>\n              <p key=\"8\">\n                {data.Ratings[1].Source}, {data.Ratings[1].Value}\n              </p>\n            </>,\n            <p key=\"9\">\n              {data.Ratings[2].Source}, {data.Ratings[2].Value}\n            </p>,\n          ],\n          name: data.Title,\n        });\n      }\n    });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  render() {\n    return <p>{this.state.info}</p>;\n  }\n}\n","import React from \"react\";\nimport GetFilmInfo from \"./GetFilmInfo\";\nimport App from \"../App\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nexport default class Watchlist extends React.Component {\n  state = {\n    posters: [],\n  };\n  componentDidMount() {\n    try {\n      let titles = JSON.parse(localStorage.getItem(\"titles\"));\n      let images = JSON.parse(localStorage.getItem(\"images\"));\n      console.log(titles);\n      console.log(images);\n      this.setState({ names: titles });\n      this.setter(titles, images);\n    } catch (error) {\n      console.log(error);\n      this.setState({ posters: <p> List empty </p> });\n    }\n  }\n\n  ClearList = () => {\n    localStorage.clear();\n    this.setState({ posters: <p> </p> });\n  };\n\n  change = (name) => {\n    let key2 = \"3e5977f9\";\n    console.log(name);\n    let url = `https://www.omdbapi.com/?t=${name}&apikey=${key2}`;\n    this.props.set(url);\n  };\n\n  setter = (ttl, img) => {\n    let key2 = \"3e5977f9\";\n    const images = [];\n\n    for (let i = 0; i < img.length; i++) {\n      images[i] = (\n        <>\n          <td>\n            {\" \"}\n            <Link\n              to={\"/GetFilmInfo\"}\n              className=\"nav-link\"\n              onClick={() => this.change(ttl[i])}\n            >\n              <img\n                key={i}\n                src={img[i]}\n                alt=\"poster\"\n                width=\"200\"\n                height=\"280\"\n                onClick={() => {\n                  <GetFilmInfo\n                    URL={`https://www.omdbapi.com/?t=${ttl[i]}&apikey=${key2}`}\n                  />;\n                }}\n              />\n              <Route path=\"/GetFilmInfo\">\n                <GetFilmInfo\n                  URL={`https://www.omdbapi.com/?t=${ttl[i]}&apikey=${key2}`}\n                />\n              </Route>\n            </Link>\n            <p className=\"list\">\n              <small>{ttl[i]}</small>{\" \"}\n            </p>\n          </td>\n        </>\n      );\n    }\n    this.setState({ posters: [images] });\n  };\n\n  render() {\n    return (\n      <p>\n        <button onClick={() => this.ClearList()}>Clear List</button>\n        <p></p>\n        <tr> {this.state.posters}</tr>\n      </p>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport GetFilmInfo from \"./GetFilmInfo\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport { render } from \"@testing-library/react\";\nexport default class GetHomePage extends React.Component {\n  state = {\n    info: [],\n  };\n\n  componentDidMount(props) {\n    this.search(props);\n  }\n\n  async search(props) {\n    let key = \"k_nb1tky3v\";\n    let url = `https://imdb-api.com/en/API/ComingSoon/${key}`;\n    var key2 = \"3e5977f9\";\n    const GetFilm = (name) => {\n      change(name);\n      console.log(name);\n    };\n    const change = (name) => {\n      url = `https://www.omdbapi.com/?t=${name}&apikey=${key2}`;\n      this.props.set(url);\n      // return <GetFilmInfo URL={url} />;\n    };\n    axios.get(url).then((res) => {\n      const data = res.data;\n      const imgUrls = [];\n      const images = [];\n      const titles = [];\n      console.log(data);\n      for (let i = 0; i < 10; i++) {\n        imgUrls[i] = data.items[i].image;\n        titles[i] = data.items[i].title;\n        images[i] = (\n          //<Router>\n          <Link to={\"/GetFilmInfo\"}>\n            <img\n              key={data.items[i].id}\n              onClick={() => GetFilm(titles[i])}\n              src={imgUrls[i]}\n              alt=\"poster\"\n              width=\"150\"\n              height=\"200\"\n            />\n            <Route path=\"/GetFilmInfo\">\n              <GetFilmInfo\n                URL={`https://www.omdbapi.com/?t=${titles[i]}&apikey=${key2}`}\n              />\n            </Route>\n          </Link>\n          //</Router>\n        );\n      }\n      this.setState({\n        info: [\n          images[0],\n          images[1],\n          images[2],\n          images[3],\n          images[4],\n          <p> </p>,\n          images[5],\n          images[6],\n          images[7],\n          images[8],\n          images[9],\n        ],\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <header>Coming Soon </header>\n        <p> {this.state.info}</p>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport App from \"../App\";\nimport GetFilmInfo from \"./GetFilmInfo\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport { render } from \"@testing-library/react\";\nexport default class GetHomePage extends React.Component {\n  state = {\n    info: [],\n  };\n\n  componentDidMount(props) {\n    try {\n      this.search(props);\n    } catch (error) {\n      this.setState({ info: <p> </p> });\n      console.log(error);\n    }\n  }\n\n  async search(props) {\n    let key = \"k_nb1tky3v\";\n    let url = `https://imdb-api.com/en/API/MostPopularMovies/${key}`;\n    var key2 = \"3e5977f9\";\n\n    const GetFilm = (name) => {\n      url = `https://www.omdbapi.com/?t=${name}&apikey=${key2}`;\n      this.props.set(url);\n      console.log(name);\n    };\n\n    axios.get(url).then((res) => {\n      const data = res.data;\n      const imgUrls = [];\n      const images = [];\n      const titles = [];\n      console.log(data);\n      for (let i = 0; i < 10; i++) {\n        imgUrls[i] = data.items[i].image;\n        titles[i] = data.items[i].title;\n        images[i] = (\n          <Link to={\"/GetFilmInfo\"} onClick={() => GetFilm(titles[i])}>\n            <img\n              key={data.items[i].id}\n              src={imgUrls[i]}\n              alt=\"poster\"\n              width=\"150\"\n              height=\"200\"\n            />\n            <Route path=\"/GetFilmInfo\">\n              <GetFilmInfo\n                URL={`https://www.omdbapi.com/?t=${titles[i]}&apikey=${key2}`}\n              />\n            </Route>\n          </Link>\n          //</Router>\n        );\n      }\n      this.setState({\n        info: [\n          images[0],\n          images[1],\n          images[2],\n          images[3],\n          images[4],\n          <p> </p>,\n          images[5],\n          images[6],\n          images[7],\n          images[8],\n          images[9],\n        ],\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <header>Most popular films </header>\n        <p> {this.state.info}</p>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nexport default class GetTop25 extends React.Component {\n  state = {\n    info: [],\n  };\n\n  componentDidMount() {\n    this.search();\n  }\n\n  async search() {\n    let key = \"k_nb1tky3v\";\n    let url = `https://imdb-api.com/en/API/MostPopularMovies/${key}`;\n    axios.get(url).then((res) => {\n      const data = res.data;\n      const imgUrls = [];\n      const images = [];\n      console.log(data);\n      console.log(data.items[0].fullTitle);\n      console.log(data.items[0]);\n      for (let i = 0; i < 25; i++) {\n        imgUrls[i] = data.items[i].image;\n        images[i] = (\n          <img\n            key={i}\n            src={imgUrls[i]}\n            alt=\"poster\"\n            width=\"100\"\n            height=\"150\"\n            //  onClick={<ShowInfo film={data.items[0]} />}\n          />\n        );\n      }\n\n      this.setState({\n        info: [\n          images[0],\n          images[1],\n          images[2],\n          images[3],\n          images[4],\n          <p> </p>,\n          images[5],\n          images[6],\n          images[7],\n          images[8],\n          images[9],\n          <p> </p>,\n          images[10],\n          images[11],\n          images[12],\n          images[13],\n          images[14],\n          <p> </p>,\n          images[15],\n          images[16],\n          images[17],\n          images[18],\n          images[19],\n          <p> </p>,\n          images[20],\n          images[21],\n          images[22],\n          images[23],\n          images[24],\n        ],\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <header>TODAY'S TOP 25 FILMS </header>\n        <p> {this.state.info}</p>\n      </>\n    );\n  }\n}\n","import \"./App.css\";\nimport GetFilmInfo from \"./components/GetFilmInfo\";\nimport React from \"react\";\nimport Watchlist from \"./components/Watchlist\";\nimport ComingSoon from \"./components/ComingSoon\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport { render } from \"@testing-library/react\";\nimport GetHomePage from \"./components/GetHomePage\";\nimport Login from \"./components/Login\";\nimport GetTop25 from \"./components/GetTop25\";\nconst axios = require(\"axios\");\n\nfunction App() {\n  let [film, setFilm] = React.useState(\"Pulp Fiction\");\n  var key = \"3e5977f9\";\n  let [url, setUrl] = React.useState(\n    `https://www.omdbapi.com/?t=${film}&apikey=${key}`\n  );\n\n  const GetFilm = () => {\n    return <GetFilmInfo URL={url} />;\n  };\n\n  const change = () => {\n    setUrl(`https://www.omdbapi.com/?t=${film}&apikey=${key}`);\n    GetFilm();\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/*  <Login /> */}\n          <nav className=\"nav-link\">\n            <Link to={\"/GetHomePage\"} className=\"nav-link\">\n              {\" \"}\n              Home\n            </Link>\n            <> </>\n            <Link to={\"/GetFilmInfo\"} className=\"nav-link\">\n              Search\n            </Link>\n            <> </>\n            <Link to={\"/ComingSoon\"} className=\"nav-link\">\n              Coming Soon\n            </Link>\n            <> </>\n            <Link to={\"/GetTop25\"} className=\"nav-link\">\n              TOP25\n            </Link>\n            <Link to={\"/Watchlist\"} className=\"nav-link\">\n              Watchlist\n            </Link>\n          </nav>\n          <p>\n            <Link to={\"/GetFilmInfo\"}>\n              <button onClick={change}>search</button>\n            </Link>\n            <input\n              type=\"text\"\n              placeholder=\"film\"\n              onChange={(e) => {\n                setFilm(e.target.value);\n              }}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") {\n                  //setFilm(e.target.value);\n                  change();\n                }\n              }}\n            />\n          </p>\n\n          <Switch>\n            <Route exact path=\"/GetHomePage\">\n              <GetHomePage set={setUrl} />\n            </Route>\n            <Route path=\"/GetFilmInfo\">\n              <GetFilmInfo URL={url} />\n            </Route>\n            <Route path=\"/ComingSoon\">\n              <ComingSoon set={setUrl} />{\" \"}\n            </Route>\n            <Route path=\"/GetTop25\" component={GetTop25} />\n            <Route path=\"/Watchlist\">\n              <Watchlist set={setUrl} />\n            </Route>\n            <Redirect to=\"/GetHomePage\">\n              <GetHomePage set={setUrl} />\n            </Redirect>\n          </Switch>\n        </header>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}