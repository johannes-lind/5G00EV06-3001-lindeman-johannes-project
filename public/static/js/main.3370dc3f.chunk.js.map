{"version":3,"sources":["components/AddToList.js","components/Search.js","components/Watchlist.js","components/ComingSoon.js","components/HomePage.js","components/GetTop25.js","App.js","reportWebVitals.js","index.js"],"names":["AddToList","id","title","image","idlist","JSON","parse","localStorage","getItem","titlelist","imagelist","filmAlreadyOnList","i","length","console","log","push","setItem","stringify","Search","_isMounted","state","info","name","ratings","onList","added","setState","this","search","error","nextProps","nextState","a","axios","get","props","URL","then","res","data","Poster","className","Title","Year","onClick","align","src","alt","width","height","Rated","Runtime","Actors","Director","Writer","BoxOffice","Plot","Awards","imdbID","rating1","Ratings","Source","Value","rating2","rating3","React","Component","Watchlist","posters","ClearList","clear","change","key2","process","KEY","url","set","remove","film","ids","titles","images","newIds","newTitles","newImages","setter","img","to","path","rows","names","ComingSoon","key","KEY2","GetFilm","imgUrls","items","HomePage","GetTop25","fullTitle","require","App","useState","setFilm","setUrl","size","type","placeholder","onChange","e","target","value","onKeyPress","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3370dc3f.chunk.js","sourcesContent":["export default function AddToList(id, title, image) {\n  var idlist = JSON.parse(localStorage.getItem(\"ids\")) || [];\n  var titlelist = JSON.parse(localStorage.getItem(\"titles\")) || [];\n  var imagelist = JSON.parse(localStorage.getItem(\"images\")) || [];\n\n  let filmAlreadyOnList = false;\n\n  // loop to prevent adding same film to the watchlist twice\n  for (let i = 0; i < idlist.length; i++) {\n    if (idlist[i] === id) {\n      filmAlreadyOnList = true;\n      console.log(filmAlreadyOnList);\n    }\n  }\n  if (!filmAlreadyOnList) {\n    idlist.push(id);\n    titlelist.push(title);\n    imagelist.push(image);\n  }\n  // sen the lists back to storage either changed or unchanged\n  localStorage.setItem(\"ids\", JSON.stringify(idlist));\n  localStorage.setItem(\"titles\", JSON.stringify(titlelist));\n  localStorage.setItem(\"images\", JSON.stringify(imagelist));\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport AddToList from \"./AddToList\";\nimport \"./components.css\";\n\nexport default class Search extends React.Component {\n  _isMounted = false;\n  state = {\n    info: [],\n    name: \" \",\n    ratings: [],\n    onList: [],\n    id: \" \",\n  };\n  // when component is mounted, it will run a search\n  // error handling for no results included\n  componentDidMount() {\n    this.setState({ onList: [] });\n    this._isMounted = true;\n    try {\n      this.search();\n    } catch (error) {\n      this.setState({\n        info: (\n          <p>\n            {\" \"}\n            <em>No results found </em>\n          </p>\n        ),\n      });\n      console.log(error);\n    }\n  }\n\n  //when new URL is set, a new search will be run\n  // error handling for no results included\n  componentDidUpdate(nextProps, nextState) {\n    try {\n      if (nextState.info !== this.state.info) {\n        this.search();\n      }\n    } catch (error) {\n      this.setState({ info: <p> No results found </p> });\n      console.log(error);\n    }\n  }\n  added = () => {\n    this.setState({\n      onList: [<>✅</>],\n    });\n  };\n  // search function including data parsing and setting up component for render\n  // error handinlg included if no ratings for the film are available (which is very frequent)\n  async search() {\n    axios.get(this.props.URL).then((res) => {\n      const data = res.data;\n      const image = data.Poster;\n\n      if (this._isMounted) {\n        this.setState({\n        \n          info: [\n            <div>\n              <h2>\n                <p className=\"header\">\n                  {data.Title} ({data.Year})\n                  <p>\n                    <button\n                      className=\"b\"\n                      onClick={() => (\n                        AddToList(this.state.id, this.state.name, image),\n                        this.added()\n                      )}\n                    >\n                      Add to Watchlist\n                    </button>\n                    <small>{this.state.onList}</small>\n                  </p>\n                </p>\n                <img\n                  align=\"left\"\n                  key=\"0\"\n                  src={image}\n                  alt=\"poster\"\n                  width=\"300\"\n                  height=\"420\"\n                />\n              </h2>\n              <section className=\"infoarticle\">\n                <p>Rated: {data.Rated}</p>\n                <p>Runtime: {data.Runtime}</p>\n                <p>Starring: {data.Actors}</p>\n                <p>Directed by: {data.Director}</p>\n                <p>Writer: {data.Writer}</p>\n                <p>Box Office: {data.BoxOffice}</p>\n                <p>\n                  <em>{data.Plot}</em>\n                </p>\n                <p>Awards: {data.Awards}</p>\n              </section>\n            </div>,\n          ],\n          name: data.Title,\n          id: data.imdbID,\n        });\n        try {\n          const rating1 = [data.Ratings[0].Source, data.Ratings[0].Value];\n          const rating2 = [data.Ratings[1].Source, data.Ratings[1].Value];\n          const rating3 = [data.Ratings[2].Source, data.Ratings[2].Value];\n          this.setState({\n            ratings: [\n              <ul>\n                <li>\n                  {rating1[0]}: {rating1[1]}\n                </li>\n\n                <li>\n                  {rating2[0]}: {rating2[1]}\n                </li>\n\n                <li>\n                  {rating3[0]}: {rating3[1]}\n                </li>\n              </ul>,\n            ],\n          });\n        } catch (error) {\n          this.setState({\n            ratings: [\n              <p>\n                <em>Ratings not available</em>{\" \"}\n              </p>,\n            ],\n          });\n        }\n      }\n    });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  render() {\n    return (\n      <>\n        <table>{this.state.info} </table>\n        <p className=\"ratings\"> RATINGS {this.state.ratings}</p>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport Search from \"./Search\";\nimport \"./components.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nexport default class Watchlist extends React.Component {\n  state = {\n    posters: [],\n  };\n\n  componentDidMount() {\n    // if persistent storage holds data for watchlist, the watchlist is set\n    // otherwise only text \"empty list\" will be shown\n    try {\n      let ids = JSON.parse(localStorage.getItem(\"ids\"));\n      let titles = JSON.parse(localStorage.getItem(\"titles\"));\n      let images = JSON.parse(localStorage.getItem(\"images\"));\n      console.log(ids);\n      console.log(images);\n      this.setState({ names: ids });\n      this.setter(ids, titles, images);\n    } catch (error) {\n      console.log(error);\n      this.setState({ posters: <p> List empty </p> });\n    }\n  }\n\n  // function to clear the whole watchlist\n  ClearList = () => {\n    localStorage.clear();\n    this.setState({ posters: <p> </p> });\n  };\n\n  // function to change the url in the App-component\n  change = (id) => {\n    let key2 = process.env.KEY;\n    let url = `https://www.omdbapi.com/?i=${id}&apikey=${key2}`;\n    this.props.set(url);\n  };\n\n  // function to remove individual films from the list\n  remove = (film, image) => {\n    let ids = JSON.parse(localStorage.getItem(\"ids\"));\n    let titles = JSON.parse(localStorage.getItem(\"titles\"));\n    let images = JSON.parse(localStorage.getItem(\"images\"));\n    let newIds = [];\n    let newTitles = [];\n    let newImages = [];\n    for (let i = 0; i < ids.length; i++) {\n      if (ids[i] !== film) {\n        newIds.push(ids[i]);\n        newTitles.push(titles[i]);\n        newImages.push(images[i]);\n      }\n    }\n    localStorage.setItem(\"ids\", JSON.stringify(newIds));\n    localStorage.setItem(\"titles\", JSON.stringify(newTitles));\n    localStorage.setItem(\"images\", JSON.stringify(newImages));\n    console.log(newIds);\n    this.setter(newIds, newTitles, newImages);\n  };\n\n  // setting up the component according to the title and image it receives as parameter\n  // images will once again serve as links to film's page\n  setter = (id, title, img) => {\n    let key2 = process.env.KEY;\n    let key3 = process.env.KEY;\n    const images = [];\n\n    for (let i = 0; i < img.length; i++) {\n      images[i] = (\n        <td>\n          <Link\n            to={\"/Search\"}\n            className=\"nav-link\"\n            onClick={() => this.change(id[i])}\n          >\n            <img\n              key={i}\n              src={img[i]}\n              alt=\"poster\"\n              width=\"200\"\n              height=\"280\"\n              onClick={() => {\n                <Search\n                  URL={`https://www.omdbapi.com/?i=${id[i]}&apikey=${key2}`}\n                />;\n              }}\n            />\n            <Route path=\"/Search\">\n              <Search\n                URL={`https://www.omdbapi.com/?i=${id[i]}&apikey=${key2}`}\n              />\n            </Route>\n          </Link>\n          <p className=\"list\">\n            {title[i]}\n            <p>\n              <button className=\"b\" onClick={() => this.remove(id[i], img[i])}>\n                Delete\n              </button>\n            </p>\n          </p>\n        </td>\n      );\n    }\n    // creating a table if the watchlist is longer than 5\n    if (img.length < 6) {\n      this.setState({ posters: [<table>{images}</table>] });\n    } else {\n      let rows = [];\n      for (let i = 0; i < img.length; i++) {\n        if (i % 5 === 0) {\n          rows.push(<tr>{}</tr>);\n        }\n        rows.push(images[i]);\n      }\n      this.setState({ posters: [<table>{rows}</table>] });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"posters\">\n        <button className=\"b\" onClick={() => this.ClearList()}>\n          Clear List\n        </button>\n        {this.state.posters}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport Search from \"./Search\";\nimport \"./components.css\";\nimport AddToList from \"./AddToList\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport { render } from \"@testing-library/react\";\nexport default class ComingSoon extends React.Component {\n  state = {\n    info: [],\n  };\n\n  componentDidMount(props) {\n    this.search(props);\n  }\n\n  async search(props) {\n    let key = process.env.KEY2;\n    let url = `https://imdb-api.com/en/API/ComingSoon/${key}`;\n    var key2 = process.env.KEY;\n    const GetFilm = (id) => {\n      change(id);\n      console.log(id);\n    };\n    const change = (id) => {\n      url = `https://www.omdbapi.com/?i=${id}&apikey=${key2}`;\n      this.props.set(url);\n      // return <Search URL={url} />;\n    };\n    axios.get(url).then((res) => {\n      const data = res.data;\n      const imgUrls = [];\n      const images = [];\n      const titles = [];\n      const ids = [];\n      console.log(data);\n      for (let i = 0; i < 15; i++) {\n        imgUrls[i] = data.items[i].image;\n        titles[i] = data.items[i].title;\n        ids[i] = data.items[i].id;\n        images[i] = (\n          <td>\n            <Link to={\"/Search\"}>\n              <img\n                key={data.items[i].id}\n                onClick={() => GetFilm(ids[i])}\n                src={imgUrls[i]}\n                alt=\"poster\"\n                width=\"150\"\n                height=\"200\"\n              />\n              <Route path=\"/Search\">\n                <Search\n                  URL={`https://www.omdbapi.com/?i=${ids[i]}&apikey=${key2}`}\n                />\n              </Route>\n            </Link>\n            <p className=\"list\">\n              <small> {titles[i]}</small>{\" \"}\n            </p>{\" \"}\n            <p></p>\n            <button\n              className=\"b\"\n              onClick={() => AddToList(ids[i], titles[i], imgUrls[i])}\n            >\n              Add to Watchlist\n            </button>\n          </td>\n        );\n      }\n      this.setState({\n        info: [\n          images[0],\n          images[1],\n          images[2],\n          images[3],\n          images[4],\n          <p> </p>,\n          images[5],\n          images[6],\n          images[7],\n          images[8],\n          images[9],\n          <p> </p>,\n          images[10],\n          images[11],\n          images[12],\n          images[13],\n          images[14],\n        ],\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <header>Coming Soon </header>\n        <p> {this.state.info}</p>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport Search from \"./Search\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nexport default class HomePage extends React.Component {\n  state = {\n    info: [],\n  };\n\n  componentDidMount(props) {\n    try {\n      this.search(props);\n    } catch (error) {\n      this.setState({ info: <p> </p> });\n      console.log(error);\n    }\n  }\n\n  // function to search film from API\n  async search(props) {\n    let key = process.env.KEY2;\n    let url = `https://imdb-api.com/en/API/MostPopularMovies/${key}`;\n    var key2 = process.env.KEY;\n\n    // function to change the url and send it to App-components\n    const GetFilm = (id) => {\n      url = `https://www.omdbapi.com/?i=${id}&apikey=${key2}`;\n      this.props.set(url);\n    };\n\n    // parsing the data accordingly to arrays\n    try {\n      axios.get(url).then((res) => {\n        const data = res.data;\n        const imgUrls = [];\n        const images = [];\n        const ids = [];\n        const titles = [];\n        // creating the components that will be shown on homepage\n        // each image will also serve as a link to the search page of the film\n        for (let i = 0; i < 15; i++) {\n          imgUrls[i] = data.items[i].image;\n          titles[i] = data.items[i].title;\n          console.log(data);\n          ids[i] = data.items[i].id;\n          images[i] = (\n            <td>\n              <Link to={\"/Search\"} onClick={() => GetFilm(ids[i])}>\n                <img\n                  key={data.items[i].id}\n                  src={imgUrls[i]}\n                  alt=\"poster\"\n                  width=\"150\"\n                  height=\"210\"\n                />\n                <Route path=\"/Search\">\n                  <Search\n                    URL={`https://www.omdbapi.com/?i=${ids[i]}&apikey=${key2}`}\n                  />\n                </Route>\n              </Link>\n              <p className=\"list\">{titles[i]}</p>\n            </td>\n          );\n        }\n        this.setState({\n          info: [\n            images[0],\n            images[1],\n            images[2],\n            images[3],\n            images[4],\n            <tr></tr>,\n            images[5],\n            images[6],\n            images[7],\n            images[8],\n            images[9],\n            <tr></tr>,\n            images[10],\n            images[11],\n            images[12],\n            images[13],\n            images[14],\n          ],\n        });\n      });\n    } catch (error) {\n      // in case the number of API-requests is exceeded\n      this.setState({ info: <p> Request limit exceeded! </p> });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <header className=\"header\">Most popular films </header>\n        <table className=\"list\"> {this.state.info}</table>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\nexport default class GetTop25 extends React.Component {\n  state = {\n    info: [],\n  };\n\n  componentDidMount() {\n    this.search();\n  }\n\n  async search() {\n    let key = process.env.KEY2;\n    let url = `https://imdb-api.com/en/API/MostPopularMovies/${key}`;\n    axios.get(url).then((res) => {\n      const data = res.data;\n      const imgUrls = [];\n      const images = [];\n      console.log(data);\n      console.log(data.items[0].fullTitle);\n      console.log(data.items[0]);\n      for (let i = 0; i < 25; i++) {\n        imgUrls[i] = data.items[i].image;\n        images[i] = (\n          <td>\n            <>\n              <img\n                key={i}\n                src={imgUrls[i]}\n                alt=\"poster\"\n                width=\"150\"\n                height=\"200\"\n              />\n              <p className=\"list\">\n                <small> {data.items[i].title}</small>{\" \"}\n              </p>\n            </>\n          </td>\n        );\n      }\n\n      this.setState({\n        info: [\n          images[0],\n          images[1],\n          images[2],\n          images[3],\n          images[4],\n          <p> </p>,\n          images[5],\n          images[6],\n          images[7],\n          images[8],\n          images[9],\n          <p> </p>,\n          images[10],\n          images[11],\n          images[12],\n          images[13],\n          images[14],\n          <p> </p>,\n          images[15],\n          images[16],\n          images[17],\n          images[18],\n          images[19],\n          <p> </p>,\n          images[20],\n          images[21],\n          images[22],\n          images[23],\n          images[24],\n        ],\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <header>TODAY'S TOP 25 FILMS </header>\n        <p> {this.state.info}</p>\n      </>\n    );\n  }\n}\n","import \"./App.css\";\nimport Search from \"./components/Search\";\nimport React from \"react\";\nimport Watchlist from \"./components/Watchlist\";\nimport ComingSoon from \"./components/ComingSoon\";\nimport \"./components/components.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport { render } from \"@testing-library/react\";\nimport HomePage from \"./components/HomePage\";\nimport Login from \"./components/Login\";\nimport GetTop25 from \"./components/GetTop25\";\nconst axios = require(\"axios\");\n\nfunction App() {\n  let [film, setFilm] = React.useState(\"Pulp Fiction\");\n  var key = process.env.KEY;\n  let [url, setUrl] = React.useState(\n    `https://www.omdbapi.com/?t=${film}&apikey=${key}`\n  );\n\n  // sending the url to Search -component\n  const GetFilm = () => {\n    return <Search URL={url} />;\n  };\n  //changing the url based on input\n  const change = () => {\n    setUrl(`https://www.omdbapi.com/?t=${film}&apikey=${key}`);\n    GetFilm();\n  };\n\n  return (\n    <Router>\n      <body>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            {/*  <Login /> */}\n            <nav className=\"nav-link\">\n              <Link to={\"/HomePage\"} className=\"nav-link\">\n                {\"   \"}\n                Home\n              </Link>\n              <> </>\n              <Link to={\"/Search\"} className=\"nav-link\">\n                {\"    \"} Search\n              </Link>\n              <> </>\n              <Link to={\"/ComingSoon\"} className=\"nav-link\">\n                {\"    \"} Coming Soon\n              </Link>\n              <> </>\n              <Link to={\"/GetTop25\"} className=\"nav-link\">\n                {\"    \"}TOP25\n              </Link>\n              <Link to={\"/Watchlist\"} className=\"nav-link\">\n                {\"    \"} Watchlist\n              </Link>\n            </nav>\n            <p>\n              <Link to={\"/Search\"}>\n                <button className=\"b\" onClick={change}>\n                  search\n                </button>\n              </Link>\n              <input\n                size=\"40\"\n                className=\"customInput\"\n                type=\"text\"\n                placeholder=\"film\"\n                onChange={(e) => {\n                  setFilm(e.target.value);\n                }}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\") {\n                    change();\n                  }\n                }}\n              />\n            </p>\n\n            <Switch>\n              <Route exact path=\"/HomePage\">\n                <HomePage set={setUrl} />\n              </Route>\n              <Route path=\"/Search\">\n                <Search URL={url} />\n              </Route>\n              <Route path=\"/ComingSoon\">\n                <ComingSoon set={setUrl} />{\" \"}\n              </Route>\n              <Route path=\"/GetTop25\" component={GetTop25} />\n              <Route path=\"/Watchlist\">\n                <Watchlist set={setUrl} />\n              </Route>\n              <Redirect to=\"/HomePage\">\n                <HomePage set={setUrl} />\n              </Redirect>\n            </Switch>\n          </header>\n        </div>\n      </body>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}